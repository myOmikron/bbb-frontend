user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    # multi_accept on;
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80 default_server;
        root /srv/;

        location /hls {
            add_header Access-Control-Allow-Origin *;

            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
        }

        location / {
            proxy_pass http://127.0.0.1:8004;
        }
    }
}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;

        application stream {
            live on;
            on_publish http://127.0.0.1:8004/internal/validate;

            # disable consuming the stream from nginx as rtmp
            deny play all;
        }

        application hls-live {
            live on;

            exec ffmpeg -i rtmp://127.0.0.1/$app/$name -vcodec libx264 -vprofile baseline -x264opts keyint=40 -acodec aac -strict -2 -f flv rtmp://127.0.0.1/hls/$name;

            # disable consuming the stream from nginx as rtmp
            deny play all;
            allow publish 127.0.0.1;
            deny publish all;
        }

        application hls {
            live on;

            hls on;
            hls_path /srv/hls;
            hls_fragment 6s;
            hls_playlist_length 60s;
        }
    }
}